{"version":3,"file":"useStarredProjects-Dh6jRvHu.js","sources":["../../src/hooks/useStarredProjects.ts"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\n\nconst FEATURED_OVERRIDES_KEY = \"featured-status-overrides\";\n\n// Since starred should be the same as featured, we implement localStorage overrides\n// This allows users to star/unstar projects while treating starred === featured\nexport const useStarredProjects = () => {\n  const [featuredOverrides, setFeaturedOverrides] = useState<Record<string, boolean>>({});\n\n  // Load featured overrides from localStorage on mount\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem(FEATURED_OVERRIDES_KEY);\n      if (saved) {\n        setFeaturedOverrides(JSON.parse(saved));\n      }\n    } catch (error) {\n      console.error(\"Error loading featured overrides:\", error);\n    }\n  }, []);\n\n  // Save featured overrides to localStorage whenever they change\n  const saveFeaturedOverrides = useCallback((overrides: Record<string, boolean>) => {\n    try {\n      localStorage.setItem(FEATURED_OVERRIDES_KEY, JSON.stringify(overrides));\n    } catch (error) {\n      console.error(\"Error saving featured overrides:\", error);\n    }\n  }, []);\n\n  // Toggle featured status for a project\n  const toggleStar = useCallback((projectId: string, originalFeatured: boolean = false) => {\n    // Only allow star modifications in development mode\n    if (import.meta.env.MODE !== \"development\") {\n      console.warn(\"Project star modifications are only allowed in development mode\");\n      return;\n    }\n\n    setFeaturedOverrides(prev => {\n      // If there's an override, toggle it. If no override, create one with opposite of original\n      const currentStatus = prev[projectId] !== undefined ? prev[projectId] : originalFeatured;\n      const newStatus = !currentStatus;\n\n      const newOverrides = { ...prev };\n\n      // If the new status matches the original, remove the override\n      if (newStatus === originalFeatured) {\n        delete newOverrides[projectId];\n      } else {\n        // Otherwise, set the override\n        newOverrides[projectId] = newStatus;\n      }\n\n      saveFeaturedOverrides(newOverrides);\n      return newOverrides;\n    });\n  }, [saveFeaturedOverrides]);\n\n  // Check if a project is starred (featured with overrides applied)\n  const isStarred = useCallback((projectId: string, originalFeatured: boolean = false) => {\n    // If there's an override, use it. Otherwise, use the original featured status\n    return featuredOverrides[projectId] !== undefined ? featuredOverrides[projectId] : originalFeatured;\n  }, [featuredOverrides]);\n\n  // Get all featured projects (with overrides applied)\n  const getFeaturedStatus = useCallback((projectId: string, originalFeatured: boolean = false) => {\n    return isStarred(projectId, originalFeatured);\n  }, [isStarred]);\n\n  // Check if star modifications are allowed (development mode only)\n  const canModifyStars = useCallback(() => {\n    return import.meta.env.MODE === \"development\";\n  }, []);\n\n  return {\n    toggleStar,\n    isStarred,\n    getFeaturedStatus,\n    canModifyStars\n  };\n};"],"names":["FEATURED_OVERRIDES_KEY","useStarredProjects","featuredOverrides","setFeaturedOverrides","useState","useEffect","saved","error","saveFeaturedOverrides","useCallback","overrides","toggleStar","projectId","originalFeatured","isStarred","getFeaturedStatus","canModifyStars"],"mappings":"mCAEA,MAAMA,EAAyB,4BAIlBC,EAAqB,IAAM,CACtC,KAAM,CAACC,EAAmBC,CAAoB,EAAIC,EAAAA,SAAkC,CAAA,CAAE,EAGtFC,EAAAA,UAAU,IAAM,CACd,GAAI,CACF,MAAMC,EAAQ,aAAa,QAAQN,CAAsB,EACrDM,GACFH,EAAqB,KAAK,MAAMG,CAAK,CAAC,CAE1C,OAASC,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,CAC1D,CACF,EAAG,CAAA,CAAE,EAGL,MAAMC,EAAwBC,cAAaC,GAAuC,CAChF,GAAI,CACF,aAAa,QAAQV,EAAwB,KAAK,UAAUU,CAAS,CAAC,CACxE,OAASH,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,CACzD,CACF,EAAG,CAAA,CAAE,EAGCI,EAAaF,EAAAA,YAAY,CAACG,EAAmBC,EAA4B,KAAU,CAE3C,CAC1C,QAAQ,KAAK,iEAAiE,EAC9E,MACF,CAoBF,EAAG,CAACL,CAAqB,CAAC,EAGpBM,EAAYL,EAAAA,YAAY,CAACG,EAAmBC,EAA4B,KAErEX,EAAkBU,CAAS,IAAM,OAAYV,EAAkBU,CAAS,EAAIC,EAClF,CAACX,CAAiB,CAAC,EAGhBa,EAAoBN,EAAAA,YAAY,CAACG,EAAmBC,EAA4B,KAC7EC,EAAUF,EAAWC,CAAgB,EAC3C,CAACC,CAAS,CAAC,EAGRE,EAAiBP,EAAAA,YAAY,IAC1B,GACN,CAAA,CAAE,EAEL,MAAO,CACL,WAAAE,EACA,UAAAG,EACA,kBAAAC,EACA,eAAAC,CAAA,CAEJ"}