{"version":3,"file":"useThemeProps-PciRNInf.js","sources":["../../node_modules/@mui/system/esm/createStyled.js","../../node_modules/@mui/system/esm/styled.js","../../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}"],"names":["_excluded","_excluded2","_excluded3","isEmpty","obj","isStringTag","tag","shouldForwardProp","prop","systemDefaultTheme","createTheme","lowercaseFirstLetter","string","resolveTheme","defaultTheme","theme","themeId","defaultOverridesResolver","slot","props","styles","processStyleArg","callableStyle","_ref","ownerState","_objectWithoutPropertiesLoose","resolvedStylesArg","_extends","resolvedStyle","variants","result","variant","isMatch","key","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","inputOptions","processStyles","style","componentName","componentSlot","inputSkipVariantsResolver","inputSkipSx","overridesResolver","options","skipVariantsResolver","skipSx","label","shouldForwardPropOption","defaultStyledResolver","styledEngineStyled","transformStyleArg","stylesArg","isPlainObject","muiStyledResolver","styleArg","expressions","transformedStyleArg","expressionsWithDefaultTheme","styleOverrides","resolvedStyleOverrides","slotKey","slotStyle","_theme$components","themeVariants","numOfCustomFnsApplied","placeholders","Component","styled","useThemeProps","name","useTheme","getThemeProps"],"mappings":"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","x_google_ignoreList":[0,1,2]}